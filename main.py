import os
import telebot
from telebot import types

token = os.environ.get("SOLARIS_TOKEN")
bot = telebot.TeleBot(token)

data = {}


@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.InlineKeyboardMarkup()
    key_start = types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å", callback_data="start")
    keyboard.add(key_start)
    text = """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üåü

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –≤—ã–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ—Ç –°–æ–ª—è—Ä–∏—Å–∞! –ù–∞–º –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ, –∏ –º—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤.

–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—É—á–µ–Ω–∏—è –∏ —Å–¥–µ–ª–∞—Ç—å –∫—É—Ä—Å—ã –µ—â–µ –ª—É—á—à–µ. 

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–¥–µ–ª–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏!"""
    bot.send_message(message.from_user.id, text, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == "start")
def callback_worker(call):
    message = call.message
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text="–ü—Ä–∏—à–ª–∏—Ç–µ –§–ò–û")
    bot.register_next_step_handler(message, get_name)


def get_name(message):
    data[message.chat.id] = {}
    data[message.chat.id]["name"] = message.text
    bot.send_message(chat_id=message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑–≤—Ä–∞—Å—Ç")
    bot.register_next_step_handler(message, get_age)


def get_courses():
    with open('courses.txt', encoding='utf8') as f:
        courses = f.read().strip().split('\n')
    return courses


def get_age(message):
    data[message.chat.id]["age"] = message.text
    keyboard = types.InlineKeyboardMarkup()
    courses = get_courses()
    for num, course in enumerate(courses, start=1):
        button = types.InlineKeyboardButton(text=course, callback_data=f"course{num}")
        keyboard.add(button)
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø—Ä–æ—à–ª–∏:"
    bot.send_message(chat_id=message.chat.id, text=text, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data.startswith("course"))
def callback_course(call):
    message = call.message
    data[message.chat.id]["course"] = message.text
    keyboard = types.InlineKeyboardMarkup()
    yes = types.InlineKeyboardButton(text="–î–∞", callback_data="q1_yes")
    keyboard.add(yes)
    no = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="q1_no")
    keyboard.add(no)

    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                          text="–ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å?", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data.startswith("q1"))
def callback_q1(call):
    message = call.message
    if call.data == "q1_yes":
        data[message.chat.id]["like"] = True
    else:
        data[message.chat.id]["like"] = False
    keyboard = types.InlineKeyboardMarkup()
    yes = types.InlineKeyboardButton(text="–î–∞", callback_data="q2_yes")
    keyboard.add(yes)
    no = types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="q2_no")
    keyboard.add(no)
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                          text="—Ä–∞–Ω–¥–æ–º–Ω—ã–π –≤–æ–ø—Ä–æ—Å??", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data.startswith("q2"))
def callback_q2(call):
    message = call.message
    if call.data == "q1_yes":
        data[message.chat.id]["q2"] = True
    else:
        data[message.chat.id]["q1"] = False
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                          text="–ù–∞–ø–∏—à–∏—Ç–µ –æ–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ/–∏–Ω—Ç–µ–Ω—Å–∏–≤–µ")
    bot.register_next_step_handler(message, get_info)


def get_info(message):
    data[message.chat.id]["info"] = message.text
    keyboard = types.InlineKeyboardMarkup()
    buttons = []
    for i in range(1, 6):
        button = types.InlineKeyboardButton(text=str(i), callback_data=f"q3_{i}")
        buttons.append(button)
    keyboard.row(*buttons)
    bot.send_message(chat_id=message.chat.id, text="–û—Ü–µ–Ω–∏—Ç–µ –≤ —Ü–µ–ª–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ç 1 –¥–æ 5",
                     reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data.startswith("q3"))
def callback_q3(call):
    message = call.message
    data[message.chat.id]["q3"] = int(call.data[-1])
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                          text="–í–∞–º –æ—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –Ω–∞–∂–º–∏—Ç–µ /start")



bot.polling(none_stop=True, interval=0)
